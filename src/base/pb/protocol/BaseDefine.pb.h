// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BaseDefine.proto

#ifndef PROTOBUF_INCLUDED_BaseDefine_2eproto
#define PROTOBUF_INCLUDED_BaseDefine_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_BaseDefine_2eproto 

namespace protobuf_BaseDefine_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_BaseDefine_2eproto
namespace BaseDefine {
}  // namespace BaseDefine
namespace BaseDefine {

enum ServiceID {
  SID_REGISTER = 0,
  SID_LOGIN = 1,
  SID_BUDDY_LIST = 2,
  SID_MSG = 3,
  SID_GROUP = 4,
  SID_FILE = 5,
  SID_SWITCH_SERVICE = 6,
  SID_OTHER = 7,
  SID_INTERNAL = 8,
  ServiceID_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ServiceID_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ServiceID_IsValid(int value);
const ServiceID ServiceID_MIN = SID_REGISTER;
const ServiceID ServiceID_MAX = SID_INTERNAL;
const int ServiceID_ARRAYSIZE = ServiceID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ServiceID_descriptor();
inline const ::std::string& ServiceID_Name(ServiceID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ServiceID_descriptor(), value);
}
inline bool ServiceID_Parse(
    const ::std::string& name, ServiceID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ServiceID>(
    ServiceID_descriptor(), name, value);
}
enum RegCmdID {
  CID_REGISTER_NONE = 0,
  CID_REGISTER_REQ_USEREG = 256,
  CID_REGISTER_RES_USEREG = 257,
  RegCmdID_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  RegCmdID_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool RegCmdID_IsValid(int value);
const RegCmdID RegCmdID_MIN = CID_REGISTER_NONE;
const RegCmdID RegCmdID_MAX = CID_REGISTER_RES_USEREG;
const int RegCmdID_ARRAYSIZE = RegCmdID_MAX + 1;

const ::google::protobuf::EnumDescriptor* RegCmdID_descriptor();
inline const ::std::string& RegCmdID_Name(RegCmdID value) {
  return ::google::protobuf::internal::NameOfEnum(
    RegCmdID_descriptor(), value);
}
inline bool RegCmdID_Parse(
    const ::std::string& name, RegCmdID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RegCmdID>(
    RegCmdID_descriptor(), name, value);
}
enum LoginCmdID {
  CID_LOGIN_NONE = 0,
  CID_LOGIN_REQ_MSGSERVER = 512,
  CID_LOGIN_RES_MSGSERVER = 513,
  CID_LOGIN_REQ_USERLOGIN = 514,
  CID_LOGIN_RES_USERLOGIN = 515,
  CID_LOGIN_REQ_LOGINOUT = 516,
  CID_LOGIN_RES_LOGINOUT = 517,
  CID_LOGIN_KICK_USER = 518,
  CID_LOGIN_REQ_DEVICETOKEN = 519,
  CID_LOGIN_RES_DEVICETOKEN = 520,
  CID_LOGIN_REQ_KICKPCCLIENT = 521,
  CID_LOGIN_RES_KICKPCCLIENT = 522,
  CID_LOGIN_REQ_PUSH_SHIELD = 523,
  CID_LOGIN_RES_PUSH_SHIELD = 524,
  CID_LOGIN_REQ_QUERY_PUSH_SHIELD = 525,
  CID_LOGIN_RES_QUERY_PUSH_SHIELD = 526,
  LoginCmdID_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  LoginCmdID_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool LoginCmdID_IsValid(int value);
const LoginCmdID LoginCmdID_MIN = CID_LOGIN_NONE;
const LoginCmdID LoginCmdID_MAX = CID_LOGIN_RES_QUERY_PUSH_SHIELD;
const int LoginCmdID_ARRAYSIZE = LoginCmdID_MAX + 1;

const ::google::protobuf::EnumDescriptor* LoginCmdID_descriptor();
inline const ::std::string& LoginCmdID_Name(LoginCmdID value) {
  return ::google::protobuf::internal::NameOfEnum(
    LoginCmdID_descriptor(), value);
}
inline bool LoginCmdID_Parse(
    const ::std::string& name, LoginCmdID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LoginCmdID>(
    LoginCmdID_descriptor(), name, value);
}
enum RegisterResult {
  REGISTER_SUCCESS = 0,
  REGISTER_ALREADY_EXIST = 1,
  REGISTER_OTHER_FAILUER = 2,
  RegisterResult_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  RegisterResult_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool RegisterResult_IsValid(int value);
const RegisterResult RegisterResult_MIN = REGISTER_SUCCESS;
const RegisterResult RegisterResult_MAX = REGISTER_OTHER_FAILUER;
const int RegisterResult_ARRAYSIZE = RegisterResult_MAX + 1;

const ::google::protobuf::EnumDescriptor* RegisterResult_descriptor();
inline const ::std::string& RegisterResult_Name(RegisterResult value) {
  return ::google::protobuf::internal::NameOfEnum(
    RegisterResult_descriptor(), value);
}
inline bool RegisterResult_Parse(
    const ::std::string& name, RegisterResult* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RegisterResult>(
    RegisterResult_descriptor(), name, value);
}
// ===================================================================


// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace BaseDefine

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::BaseDefine::ServiceID> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::BaseDefine::ServiceID>() {
  return ::BaseDefine::ServiceID_descriptor();
}
template <> struct is_proto_enum< ::BaseDefine::RegCmdID> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::BaseDefine::RegCmdID>() {
  return ::BaseDefine::RegCmdID_descriptor();
}
template <> struct is_proto_enum< ::BaseDefine::LoginCmdID> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::BaseDefine::LoginCmdID>() {
  return ::BaseDefine::LoginCmdID_descriptor();
}
template <> struct is_proto_enum< ::BaseDefine::RegisterResult> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::BaseDefine::RegisterResult>() {
  return ::BaseDefine::RegisterResult_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_BaseDefine_2eproto
